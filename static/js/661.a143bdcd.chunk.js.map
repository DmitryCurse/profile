{"version":3,"file":"static/js/661.a143bdcd.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://my-app/./src/Сomponents/Dialogs/Dialogs.module.css?9baa","Сomponents/Dialogs/DialogItem/DialogItem.jsx","Сomponents/Dialogs/Message/Message.jsx","Сomponents/Dialogs/Dialogs.jsx","Сomponents/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZX6XS\",\"dialog\":\"Dialogs_dialog__ZJn+w\",\"dialogsItem\":\"Dialogs_dialogsItem__-z+aW\",\"active\":\"Dialogs_active__Ej4j8\",\"textarea\":\"Dialogs_textarea__duARs\",\"button\":\"Dialogs_button__osVEB\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return <div className={s.dialog + ' ' + s.active}>\r\n    <NavLink to={path}>{props.name}</NavLink>\r\n  </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../commons/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/helpers/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMesageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newMessageBody' component={Textarea} placeholder='Enter your message'\r\n                       className={s.textarea} validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMesageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {\r\n    sendMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React","connect","path","id","className","s","children","NavLink","name","message","maxLength100","maxLengthCreator","AddMesageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","newMessageBody","values","sendMessage","compose","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}