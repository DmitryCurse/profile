{"version":3,"file":"static/js/804.cd3758f3.chunk.js","mappings":"gOAGIA,EAA6B,SAACC,GAAK,MAAM,CACzCC,OAAQD,EAAME,KAAKD,OACtB,EAEYE,EAAmB,SAACC,GAAe,IAEtCC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAIlB,OAJkBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MACnB,WACI,OAAKC,KAAKC,MAAMhB,QACTiB,EAAAA,EAAAA,KAACd,GAASe,EAAAA,EAAAA,GAAA,GAAKH,KAAKC,SADIC,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAI,UAEjD,KAAChB,CAAA,CAJkB,CAASiB,EAAAA,WAShC,OAFqCC,EAAAA,EAAAA,IAAQxB,EAARwB,CAAoClB,EAG7E,C,uMCXMmB,EAAgB,SAAAlB,IAAAC,EAAAA,EAAAA,GAAAiB,EAAAlB,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAe,GAAA,SAAAA,IAAA,OAAAd,EAAAA,EAAAA,GAAA,KAAAc,GAAAhB,EAAAG,MAAA,KAAAC,UAAA,CA+BjB,OA/BiBC,EAAAA,EAAAA,GAAAW,EAAA,EAAAV,IAAA,iBAAAC,MAElB,WACI,IAAIU,EAAST,KAAKC,MAAMS,OAAOC,OAAOF,OACjCA,IACDA,EAAST,KAAKC,MAAMW,mBAEhBZ,KAAKC,MAAMY,SAAS,UAG5Bb,KAAKC,MAAMa,gBAAgBL,GAC3BT,KAAKC,MAAMc,UAAUN,EACzB,GAAC,CAAAX,IAAA,oBAAAC,MAED,WACIC,KAAKgB,gBACT,GAAC,CAAAlB,IAAA,qBAAAC,MAED,SAAmBkB,EAAWC,EAAWC,GACjCnB,KAAKC,MAAMS,OAAOC,OAAOF,SAAWQ,EAAUP,OAAOC,OAAOF,QAC5DT,KAAKgB,gBAEb,GAAC,CAAAlB,IAAA,SAAAC,MAED,WACI,OAAOG,EAAAA,EAAAA,KAACkB,EAAAA,GAAOjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKH,KAAKC,OAAK,IACdoB,UAAWrB,KAAKC,MAAMoB,UACtBC,SAAUtB,KAAKC,MAAMS,OAAOC,OAAOF,OACnCc,aAAcvB,KAAKC,MAAMsB,aACzBC,QAASxB,KAAKC,MAAMuB,QACpBC,OAAQzB,KAAKC,MAAMwB,SACvC,KAACjB,CAAA,CA/BiB,CAASF,EAAAA,WAyC/B,GAAeoB,EAAAA,EAAAA,KACXnB,EAAAA,EAAAA,KARkB,SAACvB,GAAK,MAAM,CAC9BwC,QAASxC,EAAM2C,YAAYH,QAC3BC,OAAQzC,EAAM2C,YAAYF,OAC1Bb,iBAAkB5B,EAAME,KAAKuB,OAC7BxB,OAAQD,EAAME,KAAKD,OACtB,GAG4B,CACrB6B,gBAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAQ,aAAAA,EAAAA,GACAF,UAAAA,EAAAA,MCnDkB,SAACjC,GAYvB,OAXA,SAAiCa,GAC7B,IAAI2B,GAAWC,EAAAA,EAAAA,MACXhB,GAAWiB,EAAAA,EAAAA,MACXnB,GAASoB,EAAAA,EAAAA,MACb,OACI7B,EAAAA,EAAAA,KAACd,GAASe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFF,GAAK,IACTS,OAAQ,CAAEkB,SAAAA,EAAUf,SAAAA,EAAUF,OAAAA,KAG1C,CAEJ,GDuCoBxB,EAAAA,EANpB,CAMsCqB,E","sources":["hoc/withAuthRedirect.js","Сomponents/Profile/ProfileContainer.jsx","Сomponents/Profile/withRouter.js"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"./withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.navigate('/login');\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.router.params.userId}\r\n                        updateStatus={this.props.updateStatus}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUsersProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto\r\n    }), withRouter, withAuthRedirect)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport { useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\nexport const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React","connect","ProfileContainer","userId","router","params","authorizedUserId","navigate","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","savePhoto","isOwner","updateStatus","profile","status","compose","profilePage","location","useLocation","useNavigate","useParams"],"sourceRoot":""}