{"version":3,"file":"static/js/982.0508398e.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://my-app/./src/Сomponents/Dialogs/Dialogs.module.css?9baa","Сomponents/Dialogs/DialogItem/DialogItem.jsx","Сomponents/Dialogs/Message/Message.jsx","Сomponents/Dialogs/Dialogs.jsx","Сomponents/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZX6XS\",\"dialogsItem\":\"Dialogs_dialogsItem__-z+aW\",\"dialog\":\"Dialogs_dialog__ZJn+w\",\"active\":\"Dialogs_active__Ej4j8\",\"userAvatar\":\"Dialogs_userAvatar__DxRfc\",\"messages\":\"Dialogs_messages__NSW+E\",\"textarea\":\"Dialogs_textarea__duARs\",\"button\":\"Dialogs_button__osVEB\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\nimport userPhoto from '../../../assets/images/cat.jpg'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return <div className={s.dialog + ' ' + s.active}>\r\n    <img className={s.userAvatar} src={userPhoto}/>\r\n    <NavLink to={path}>{props.name}</NavLink>\r\n  </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../commons/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/helpers/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMesageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newMessageBody' component={Textarea} placeholder='Enter your message'\r\n                       className={s.textarea} validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMesageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {\r\n    sendMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React","connect","path","id","_jsxs","className","s","children","src","userPhoto","NavLink","name","message","maxLength100","maxLengthCreator","AddMesageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}