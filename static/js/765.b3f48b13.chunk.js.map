{"version":3,"file":"static/js/765.b3f48b13.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://my-app/./src/Сomponents/Profile/MyPosts/MyPosts.module.css?5fd1","webpack://my-app/./src/Сomponents/Profile/MyPosts/Post.module.css?1754","Сomponents/Profile/MyPosts/Post.jsx","Сomponents/Profile/MyPosts/MyPosts.jsx","Сomponents/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/Сomponents/Profile/ProfileInfo/ProfileInfo.module.css?6211","Сomponents/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Сomponents/Profile/ProfileInfo/ProfileDataForm.jsx","Сomponents/Profile/ProfileInfo/ProfileInfo.jsx","Сomponents/Profile/Profile.jsx","Сomponents/Profile/ProfileContainer.jsx","Сomponents/Profile/withRouter.js"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__Z-FIL\",\"textarea\":\"MyPosts_textarea__YLsQs\",\"button\":\"MyPosts_button__hloO8\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__eGdMT\",\"likes\":\"Post_likes__NbSuu\",\"postItem\":\"Post_postItem__6eKJy\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://media.moddb.com/images/groups/1/3/2392/cat.jpg\"\r\n        className={s.imgPost}\r\n      />\r\n      {props.message}\r\n      <div className={s.postItem}>\r\n        <img src=\"https://clipground.com/images/herz-orange-clipart-6.jpg\" />\r\n        <span className={s.likes}>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/helpers/validators\";\r\nimport {Textarea} from \"../../commons/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst ProfileForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} className={s.textarea} validate={[required, maxLength50]}\r\n                       placeholder={'Post message'}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddPostForm'})(ProfileForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\"\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"avatarItem\":\"ProfileInfo_avatarItem__7mSWZ\",\"avatarDescription\":\"ProfileInfo_avatarDescription__br7XF\",\"status\":\"ProfileInfo_status__eg7+K\",\"paddings\":\"ProfileInfo_paddings__C8A4G\",\"contacts\":\"ProfileInfo_contacts__zVQ1E\",\"input\":\"ProfileInfo_input__QBN8p\"};","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <div onDoubleClick={activateEditMode}\r\n                         className={s.avatarDescription}>{props.status || \"No Status\"}</div>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                           className={s.input}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../commons/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../commons/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div className={s.paddings}>\r\n                <b>Full name: </b> {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div className={s.paddings}>\r\n                <b>Looking for a job: </b> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div className={s.paddings}>\r\n                <b>My professional skills: </b> {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div className={s.paddings}>\r\n                <b>About me: </b> {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div className={s.paddings}>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contacts}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../commons/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.avatarItem}>\r\n                <img src={props.profile.photos.large || userPhoto}/>\r\n                <div className={s.block}>\r\n                    <div className={s.status}>\r\n                        <b>Status:</b>\r\n                        <div><ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/></div>\r\n                    </div>\r\n                    {props.isOwner && <input onChange={mainPhotoSelected} type={\"file\"} name={\"choose photo\"}/>}\r\n                </div>\r\n            </div>\r\n\r\n            {editMode\r\n                ? <ProfileDataFormReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                : <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.info}>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div className={s.paddings}>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div className={s.paddings}>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div className={s.paddings}>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div className={s.paddings}>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div className={s.paddings}>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.paddings + ' ' + s.contacts}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\nexport default ProfileInfo;\r\n\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                saveProfile={props.saveProfile}\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"./withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.navigate('/login');\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        saveProfile={this.props.saveProfile}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.router.params.userId}\r\n                        updateStatus={this.props.updateStatus}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUsersProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }), withRouter, withAuthRedirect)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport { useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\nexport const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React","connect","_jsxs","className","s","children","src","message","likesCount","maxLength50","maxLengthCreator","MyPosts","postsElements","posts","map","p","Post","id","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","profilePage","dispatch","addPostActionCreator","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","_ref","profile","error","style","createField","Input","type","Object","keys","contacts","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref2","Preloader","photos","large","userPhoto","ProfileStatusWithHooks","target","files","length","savePhoto","ProfileDataFormReduxForm","initialValues","formData","saveProfile","then","ProfileInfo","MyPostsContainer","ProfileContainer","userId","router","params","authorizedUserId","navigate","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","compose","location","useLocation","useNavigate","useParams"],"sourceRoot":""}