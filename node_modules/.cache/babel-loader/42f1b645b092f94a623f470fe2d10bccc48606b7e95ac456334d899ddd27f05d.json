{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi, how are you?\",\n    likesCount: 5\n  }, {\n    id: 2,\n    message: \"Squeak\",\n    likesCount: 999\n  }, {\n    id: 3,\n    message: \"Who am i?\",\n    likesCount: 0\n  }],\n  profile: null,\n  status: ''\n};\nlet profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 4,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return {\n          ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n    case SET_USERS_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    case DELETE_POST:\n      {\n        return {\n          ...state,\n          posts: state.posts.filter(p => p.id != action.postId)\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setUsersProfile = profile => ({\n  type: SET_USERS_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUsersProfile = userId => async dispatch => {\n  const response = await profileAPI.getProfile(userId);\n  dispatch(setUsersProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","arguments","length","undefined","action","type","newPost","newPostText","filter","p","postId","addPostActionCreator","deletePost","setUsersProfile","setStatus","getUsersProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode"],"sources":["D:/react-app/src/redux/profile-reducer.js"],"sourcesContent":["import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 5},\r\n        {id: 2, message: \"Squeak\", likesCount: 999},\r\n        {id: 3, message: \"Who am i?\", likesCount: 0},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUsersProfile = (profile) => ({type: SET_USERS_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUsersProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}