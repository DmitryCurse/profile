{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/helpers/object-helpers\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\nlet usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: true\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: false\n        })\n      };\n    case SET_USERS:\n      {\n        return {\n          ...state,\n          users: action.users\n        };\n      }\n    case SET_CURRENT_PAGE:\n      {\n        return {\n          ...state,\n          currentPage: action.currentPage\n        };\n      }\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return {\n          ...state,\n          totalUsersCount: action.count\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return {\n          ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    const data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n  };\n};\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  const response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport default usersReducer;","map":{"version":3,"names":["usersAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","arguments","length","undefined","action","type","userId","followed","count","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","follow","followUnfollowFlow","bind","unfollow","apiMethod","actionCreator","response","resultCode"],"sources":["D:/react-app/src/redux/users-reducer.js"],"sourcesContent":["import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/helpers/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\nlet usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        const data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport default usersReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}