{"ast":null,"code":"import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'first-react-project/auth/SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nlet authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const getAuthUserData = () => async dispatch => {\n  let response = await authAPI.me();\n  if (response.data.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n  ;\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n    dispatch(stopSubmit(\"login\", {\n      _error: message\n    }));\n  }\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","arguments","length","undefined","action","type","payload","setAuthUserData","userId","getAuthUserData","dispatch","response","me","data","resultCode","password","rememberMe","message","messages","_error","logout"],"sources":["D:/react-app/src/redux/auth-reducer.js"],"sourcesContent":["import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'first-react-project/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n}\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n    ;\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport default authReducer"],"mappings":"AAAA,SAAQA,OAAO,QAAO,YAAY;AAClC,SAAQC,UAAU,QAAO,YAAY;AAErC,MAAMC,aAAa,GAAG,wCAAwC;AAE9D,IAAIC,YAAY,GAAG;EACfC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AAEZ,CAAC;AAED,IAAIC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKZ,aAAa;MACd,OAAO;QACH,GAAGO,KAAK;QACR,GAAGI,MAAM,CAACE;MACd,CAAC;IAEL;MACI,OAAON,KAAK;EAAA;AAExB,CAAC;AAED,OAAO,MAAMO,eAAe,GAAGA,CAACC,MAAM,EAAEZ,KAAK,EAAEC,KAAK,EAAEC,MAAM,MAAM;EAC9DO,IAAI,EAAEZ,aAAa;EACnBa,OAAO,EAAE;IAACE,MAAM;IAAEZ,KAAK;IAAEC,KAAK;IAAEC;EAAM;AAC1C,CAAC,CAAC;AACF,OAAO,MAAMW,eAAe,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACrD,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAACqB,EAAE,EAAE;EAEjC,IAAID,QAAQ,CAACE,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;IAChC,IAAI;MAACnB,EAAE;MAAEE,KAAK;MAAED;IAAK,CAAC,GAAGe,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC3CH,QAAQ,CAACH,eAAe,CAACZ,EAAE,EAAEC,KAAK,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAC;EACrD;EACA;AACJ,CAAC;AACD,OAAO,MAAMA,KAAK,GAAGA,CAACD,KAAK,EAAEmB,QAAQ,EAAEC,UAAU,KAAK,MAAON,QAAQ,IAAK;EACtE,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAACM,KAAK,CAACD,KAAK,EAAEmB,QAAQ,EAAEC,UAAU,CAAC;EAE/D,IAAIL,QAAQ,CAACE,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;IAChCJ,QAAQ,CAACD,eAAe,EAAE,CAAC;EAC/B,CAAC,MAAM;IACH,IAAIQ,OAAO,GAAGN,QAAQ,CAACE,IAAI,CAACK,QAAQ,CAAChB,MAAM,GAAG,CAAC,GAAGS,QAAQ,CAACE,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,GAAG,YAAY;IAC1FR,QAAQ,CAAClB,UAAU,CAAC,OAAO,EAAE;MAAC2B,MAAM,EAAEF;IAAO,CAAC,CAAC,CAAC;EACpD;AACJ,CAAC;AAED,OAAO,MAAMG,MAAM,GAAGA,CAAA,KAAM,MAAOV,QAAQ,IAAK;EAC5C,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAAC6B,MAAM,EAAE;EAErC,IAAIT,QAAQ,CAACE,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;IAChCJ,QAAQ,CAACH,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EACtD;AACJ,CAAC;AACD,eAAeR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}