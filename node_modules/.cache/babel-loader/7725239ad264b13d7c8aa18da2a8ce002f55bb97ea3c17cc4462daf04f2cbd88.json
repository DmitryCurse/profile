{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\src\\\\\\u0421omponents\\\\commons\\\\Paginator\\\\Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './Paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paginator = _ref => {\n  _s();\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pagesArr = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pagesArr.push(i);\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginationItem,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.leftButton,\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 35\n    }, this), pagesArr.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p && s.activePaginationElement,\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.rightButton,\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","s","jsxDEV","_jsxDEV","Paginator","_ref","_s","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pagesArr","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","paginationItem","children","leftButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","p","map","activePaginationElement","e","id","rightButton","_c","$RefreshReg$"],"sources":["D:/react-app/src/Ð¡omponents/commons/Paginator/Paginator.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pagesArr = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pagesArr.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={s.paginationItem}>\r\n            {portionNumber > 1 && <button className={s.leftButton} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n            {pagesArr\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                .map(p => {\r\n                    return <span key={p.id}\r\n                                 className={currentPage === p && s.activePaginationElement}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}\r\n                    >{p}</span>\r\n                })}\r\n            {portionCount > portionNumber && <button className={s.rightButton} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,CAAC,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGC,IAAA,IAA+E;EAAAC,EAAA;EAAA,IAA9E;IAACC,eAAe;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,aAAa;IAAEC,WAAW,GAAG;EAAE,CAAC,GAAAN,IAAA;EACxF,IAAIO,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACP,eAAe,GAAGC,QAAQ,CAAC;EAEtD,IAAIO,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IAClCD,QAAQ,CAACE,IAAI,CAACD,CAAC,CAAC;EACpB;EAEA,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGD,WAAW,CAAC;EACtD,IAAI,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnD,IAAIqB,iBAAiB,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIR,WAAW,GAAG,CAAC;EAC7D,IAAIW,kBAAkB,GAAGH,aAAa,GAAGR,WAAW;EAEpD,oBACIR,OAAA;IAAKoB,SAAS,EAAEtB,CAAC,CAACuB,cAAe;IAAAC,QAAA,GAC5BN,aAAa,GAAG,CAAC,iBAAIhB,OAAA;MAAQoB,SAAS,EAAEtB,CAAC,CAACyB,UAAW;MAACC,OAAO,EAAEA,CAAA,KAAM;QAClEP,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MACvC,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACfhB,QAAQ,CACJiB,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIZ,iBAAiB,IAAIY,CAAC,IAAIX,kBAAkB,CAAC,CAC9DY,GAAG,CAACD,CAAC,IAAI;MACN,oBAAO9B,OAAA;QACMoB,SAAS,EAAEd,WAAW,KAAKwB,CAAC,IAAIhC,CAAC,CAACkC,uBAAwB;QAC1DR,OAAO,EAAGS,CAAC,IAAK;UACZ1B,aAAa,CAACuB,CAAC,CAAC;QACpB,CAAE;QAAAR,QAAA,EACbQ;MAAC,GALeA,CAAC,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKX;IACf,CAAC,CAAC,EACLb,YAAY,GAAGC,aAAa,iBAAIhB,OAAA;MAAQoB,SAAS,EAAEtB,CAAC,CAACqC,WAAY;MAACX,OAAO,EAAEA,CAAA,KAAM;QAC9EP,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MACvC,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACd;AAEd,CAAC;AAAAzB,EAAA,CAjCKF,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAmCf,eAAeA,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}