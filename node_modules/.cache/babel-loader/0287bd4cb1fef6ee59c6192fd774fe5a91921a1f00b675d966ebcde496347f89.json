{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\src\\\\\\u0421omponents\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post';\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/helpers/validators\";\nimport { Textarea } from \"../../commons/FormsControls/FormsControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength50 = maxLengthCreator(50);\nconst MyPosts = /*#__PURE__*/React.memo(_c = props => {\n  let postsElements = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likesCount: p.likesCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 46\n  }, this));\n  let onAddPost = values => {\n    props.addPost(values.newPostText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddPostReduxForm, {\n      onSubmit: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n});\n_c2 = MyPosts;\nconst ProfileForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"newPostText\",\n        component: Textarea,\n        className: s.textarea,\n        validate: [required, maxLength50],\n        placeholder: 'Post message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.button,\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c3 = ProfileForm;\nconst AddPostReduxForm = reduxForm({\n  form: 'profileAddPostForm'\n})(ProfileForm);\n_c4 = AddPostReduxForm;\nexport default MyPosts;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MyPosts$React.memo\");\n$RefreshReg$(_c2, \"MyPosts\");\n$RefreshReg$(_c3, \"ProfileForm\");\n$RefreshReg$(_c4, \"AddPostReduxForm\");","map":{"version":3,"names":["React","s","Post","Field","reduxForm","maxLengthCreator","required","Textarea","jsxDEV","_jsxDEV","maxLength50","MyPosts","memo","_c","props","postsElements","posts","map","p","message","likesCount","fileName","_jsxFileName","lineNumber","columnNumber","onAddPost","values","addPost","newPostText","className","postsBlock","children","AddPostReduxForm","onSubmit","_c2","ProfileForm","handleSubmit","name","component","textarea","validate","placeholder","button","_c3","form","_c4","$RefreshReg$"],"sources":["D:/react-app/src/Ð¡omponents/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/helpers/validators\";\r\nimport {Textarea} from \"../../commons/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst ProfileForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} className={s.textarea} validate={[required, maxLength50]}\r\n                       placeholder={'Post message'}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddPostForm'})(ProfileForm)\r\n\r\nexport default MyPosts;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,KAAK,EAAEC,SAAS,QAAO,YAAY;AAC3C,SAAQC,gBAAgB,EAAEC,QAAQ,QAAO,mCAAmC;AAC5E,SAAQC,QAAQ,QAAO,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,GAAGL,gBAAgB,CAAC,EAAE,CAAC;AAExC,MAAMM,OAAO,gBAAGX,KAAK,CAACY,IAAI,CAAAC,EAAA,GAAEC,KAAK,IAAK;EAClC,IAAIC,aAAa,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAACC,CAAC,iBAAIT,OAAA,CAACP,IAAI;IAACiB,OAAO,EAAED,CAAC,CAACC,OAAQ;IAACC,UAAU,EAAEF,CAAC,CAACE;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE,CAAC;EAC/F,IAAIC,SAAS,GAAIC,MAAM,IAAK;IACxBZ,KAAK,CAACa,OAAO,CAACD,MAAM,CAACE,WAAW,CAAC;EACrC,CAAC;EACD,oBACInB,OAAA;IAAKoB,SAAS,EAAE5B,CAAC,CAAC6B,UAAW;IAAAC,QAAA,gBACzBtB,OAAA;MAAAsB,QAAA,EAAI;IAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjBf,OAAA,CAACuB,gBAAgB;MAACC,QAAQ,EAAER;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACxCf,OAAA;MAAKoB,SAAS,EAAE5B,CAAC,CAACe,KAAM;MAAAe,QAAA,EACnBhB;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC,CAAC;AAAAU,GAAA,GAdIvB,OAAO;AAgBb,MAAMwB,WAAW,GAAIrB,KAAK,IAAK;EAC3B,oBACIL,OAAA;IAAMwB,QAAQ,EAAEnB,KAAK,CAACsB,YAAa;IAAAL,QAAA,gBAC/BtB,OAAA;MAAAsB,QAAA,eACItB,OAAA,CAACN,KAAK;QAACkC,IAAI,EAAC,aAAa;QAACC,SAAS,EAAE/B,QAAS;QAACsB,SAAS,EAAE5B,CAAC,CAACsC,QAAS;QAACC,QAAQ,EAAE,CAAClC,QAAQ,EAAEI,WAAW,CAAE;QACjG+B,WAAW,EAAE;MAAe;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,eACNf,OAAA;MAAAsB,QAAA,eACItB,OAAA;QAAQoB,SAAS,EAAE5B,CAAC,CAACyC,MAAO;QAAAX,QAAA,EAAC;MAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEf,CAAC;AAAAmB,GAAA,GAZKR,WAAW;AAcjB,MAAMH,gBAAgB,GAAG5B,SAAS,CAAC;EAACwC,IAAI,EAAE;AAAoB,CAAC,CAAC,CAACT,WAAW,CAAC;AAAAU,GAAA,GAAvEb,gBAAgB;AAEtB,eAAerB,OAAO;AAAC,IAAAE,EAAA,EAAAqB,GAAA,EAAAS,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}