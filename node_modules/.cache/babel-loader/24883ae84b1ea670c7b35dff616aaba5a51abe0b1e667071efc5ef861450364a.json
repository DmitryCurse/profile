{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\src\\\\\\u0421omponents\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../commons/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/helpers/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 50\n  }, this));\n  let messagesElements = state.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 52\n  }, this));\n  let newMessageBody = state.newMessageBody;\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItem,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddMesageFormRedux, {\n        onSubmit: addNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\nconst maxLength100 = maxLengthCreator(100);\nconst AddMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"newMessageBody\",\n        component: Textarea,\n        placeholder: \"Enter your message\",\n        className: s.textarea,\n        validate: [required, maxLength100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.button,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AddMessageForm;\nconst AddMesageFormRedux = reduxForm({\n  form: \"dialogAddMessageForm\"\n})(AddMessageForm);\n_c3 = AddMesageFormRedux;\nexport default Dialogs;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"AddMessageForm\");\n$RefreshReg$(_c3, \"AddMesageFormRedux\");","map":{"version":3,"names":["React","s","DialogItem","Message","Navigate","Field","reduxForm","Textarea","maxLengthCreator","required","jsxDEV","_jsxDEV","Dialogs","props","state","dialogsPage","dialogsElements","dialogs","map","d","name","id","fileName","_jsxFileName","lineNumber","columnNumber","messagesElements","messages","m","message","newMessageBody","addNewMessage","values","sendMessage","isAuth","to","className","children","dialogsItem","AddMesageFormRedux","onSubmit","_c","maxLength100","AddMessageForm","handleSubmit","component","placeholder","textarea","validate","button","_c2","form","_c3","$RefreshReg$"],"sources":["D:/react-app/src/Ð¡omponents/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../commons/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/helpers/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMesageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newMessageBody' component={Textarea} placeholder='Enter your message'\r\n                       className={s.textarea} validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMesageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}