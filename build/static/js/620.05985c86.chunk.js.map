{"version":3,"file":"static/js/620.05985c86.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","webpack://my-app/./src/Сomponents/Profile/MyPosts/MyPosts.module.css?5fd1","webpack://my-app/./src/Сomponents/Profile/MyPosts/Post.module.css?1754","Сomponents/Profile/MyPosts/Post.jsx","Сomponents/Profile/MyPosts/MyPosts.jsx","Сomponents/Profile/ProfileInfo/MyPostsContainer.jsx","webpack://my-app/./src/Сomponents/Profile/ProfileInfo/ProfileInfo.module.css?6211","Сomponents/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Сomponents/Profile/ProfileInfo/ProfileInfo.jsx","Сomponents/Profile/Profile.jsx","Сomponents/Profile/ProfileContainer.jsx","Сomponents/Profile/withRouter.js"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__FnljX\",\"textarea\":\"MyPosts_textarea__3v5R1\",\"button\":\"MyPosts_button__4O27c\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Ic28c\",\"likes\":\"Post_likes__CENcP\",\"postItem\":\"Post_postItem__yrNyV\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://media.moddb.com/images/groups/1/3/2392/cat.jpg\"\r\n        className={s.imgPost}\r\n      />\r\n      {props.message}\r\n      <div className={s.postItem}>\r\n        <img src=\"https://clipground.com/images/herz-orange-clipart-6.jpg\" />\r\n        <span className={s.likes}>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/helpers/validators\";\r\nimport {Textarea} from \"../../commons/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst ProfileForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} className={s.textarea} validate={[required, maxLength50]}\r\n                       placeholder={'Post message'}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddPostForm'})(ProfileForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\"\r\nimport MyPosts from \"../MyPosts/MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"avatarItem\":\"ProfileInfo_avatarItem__zNGmt\",\"avatarName\":\"ProfileInfo_avatarName__k7UhP\",\"avatarDescription\":\"ProfileInfo_avatarDescription__pVPda\",\"input\":\"ProfileInfo_input__W7exO\"};","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <div onDoubleClick={activateEditMode}\r\n                         className={s.avatarDescription}>{props.status || \"No Status\"}</div>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                           className={s.input}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../commons/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.avatarItem}>\r\n                <img src={props.profile.photos.large}/>\r\n                <div className={s.block}>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n//<div className={s.avatarDescription}><h4>Love cats</h4></div>\r\n//<div className={s.avatarName}><h3>Dmitry Ilyin </h3></div>","import React from \"react\";\r\nimport MyPostsContainer from \"./ProfileInfo/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"./withRouter\";\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.navigate('/login');\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        updateStatus={this.props.updateStatus}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUsersProfile,\r\n        getStatus,\r\n        updateStatus\r\n    }), withRouter, withAuthRedirect)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport { useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\nexport const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React","connect","_jsxs","className","s","children","src","message","likesCount","maxLength50","maxLengthCreator","MyPosts","postsElements","posts","map","p","Post","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","profilePage","dispatch","addPostActionCreator","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","profile","photos","large","ProfileStatusWithHooks","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","userId","router","params","authorizedUserId","navigate","getUsersProfile","getStatus","Profile","compose","location","useLocation","useNavigate","useParams"],"sourceRoot":""}